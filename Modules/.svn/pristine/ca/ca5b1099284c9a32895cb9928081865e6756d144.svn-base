define('RegisterCAA.Model', [
  'Models.Init',
  'SC.Model',
  'Utils',
  'Tools'
], function (
  CommerceAPI,
  SCModel,
  Utils,
  Tools
) {

  'use strict';

  return SCModel.extend({

    name: 'RegisterCAA',

    createContacts: function(data, leadID){
      var contactID;
      var contactsIDs = [];

      if(data.director_firstname){

        nlapiLogExecution("DEBUG", "director_firstname", data.director_firstname);
        nlapiLogExecution("DEBUG", "director_firstname", data.director_firstname.length);

        for(var i = 0; i < data.director_firstname.length; i++){

          nlapiLogExecution("DEBUG", "director", leadID + ' | ' + data.director_firstname[i] + ' | ' + data.director_lastname[i]);
          
            //create a new contact
            var contact = nlapiCreateRecord('contact');
    
            contact.setFieldValue("email", data.generalemailaddress);
            contact.setFieldValue("firstname", data.director_firstname[i]);
            contact.setFieldValue("lastname", data.director_lastname[i]);
            contact.setFieldValue("company", leadID);
            contactID = nlapiSubmitRecord(contact, true);

            contactsIDs.push(contactID);
        }
      }
      return contactsIDs;
    },

    createLead: function (data) {
      var companyaddress, billingaddress, shippingaddress, lead, leadID;

      //Company and contact
      var customerSearch = nlapiSearchRecord("entity", null, [
        ["entityid", "is", data.company], 'OR', ["email", "is", data.generalemailaddress]
      ], [
        new nlobjSearchColumn("entityid", null, null),
        new nlobjSearchColumn("email", null, null)
      ]);

      for (var i = 0; customerSearch != null && i < customerSearch.length; i++) {
        var res = customerSearch[i];
        if (res.recordType != "contact") {
          leadID = res.getId();
          break;
        }
      }

      if (!leadID) {
        //Create new company
        lead = nlapiCreateRecord('lead');
        lead.setFieldValue("companyname", data.company);

        if (data.tradingname) {
          lead.setFieldValue("custentity_bb1_sca_tradingname", data.tradingname);
        }

        //Addresses
        if (data.primaryaddress_addr1) {
          companyaddress = lead.getLineItemCount("addressbook") + 1;
          lead.setLineItemValue("addressbook", "addressee", companyaddress, data.company);
          lead.setLineItemValue("addressbook", "addr1", companyaddress, data.primaryaddress_addr1);
          lead.setLineItemValue("addressbook", "city", companyaddress, data.primaryaddress_city);
          lead.setLineItemValue("addressbook", "state", companyaddress, data.state);
          lead.setLineItemValue("addressbook", "country", companyaddress, data.country);
          lead.setLineItemValue("addressbook", "zip", companyaddress, data.primaryaddress_zip);
        }

        if (data.billingaddress_checkbox) {
          billingaddress = (++companyaddress);
          lead.setLineItemValue("addressbook", "addressee", billingaddress, data.company);
          lead.setLineItemValue("addressbook", "addr1", billingaddress, data.billingaddress_addr1);
          lead.setLineItemValue("addressbook", "city", billingaddress, data.billingaddress_city);
          lead.setLineItemValue("addressbook", "state", billingaddress, data.state[1]);
          lead.setLineItemValue("addressbook", "country", billingaddress, data.country[1]);
          lead.setLineItemValue("addressbook", "zip", billingaddress, data.billingaddress_zip);
          lead.setLineItemValue("addressbook", "defaultbilling", billingaddress, "T");
        }

        if (data.shippingaddress_checkbox) {
          shippingaddress = (billingaddress) ? (++billingaddress) : (++companyaddress);
          lead.setLineItemValue("addressbook", "addressee", shippingaddress, data.company);
          lead.setLineItemValue("addressbook", "addr1", shippingaddress, data.shippingaddress_addr1);
          lead.setLineItemValue("addressbook", "city", shippingaddress, data.shippingaddress_city);
          lead.setLineItemValue("addressbook", "state", shippingaddress, data.state[2]);
          lead.setLineItemValue("addressbook", "country", shippingaddress, data.country[2]);
          lead.setLineItemValue("addressbook", "zip", shippingaddress, data.shippingaddress_zip);
          lead.setLineItemValue("addressbook", "defaultshipping", shippingaddress, "T");
        }

        lead.setFieldValue("custentity_bb1_sca_registrationnumber", data.registrationnumber);
        lead.setFieldValue("custentity_bb1_comp_reg_no", data.registrationnumber);
        lead.setFieldValue("vatregnumber", data.vatnumber);
        lead.setFieldValue("phone", data.phone);
        lead.setFieldValue("email", data.generalemailaddress);
        lead.setFieldValue("custentity_bb1_gen_email_add", data.generalemailaddress);

        if (data.companywebsite) {
          lead.setFieldValue("custentity_bb1_sca_companywebsite", data.companywebsite);
          lead.setFieldValue("url", data.companywebsite);
        }

        leadID = nlapiSubmitRecord(lead, true);

        return leadID;
      }
    },

    create: function (data) {

      try {
        this.validate(data);

        var configuration, currentDomain, request, url;
        var caseconfiguration;
        var notify = /* configuration.notify */ 'deeps@mailinator.com';
        var region = 1, regionText = "UK"; //CUSTOM REGION custentity_bb1_sales_region: 1 UK, 2 France, 3 Ireland
        var newCaseRecord;
        var caseID;
        var reply;
        

        configuration = SC.Configuration && SC.Configuration.contactUs;
        caseconfiguration = SC.Configuration && SC.Configuration.cases;
        currentDomain = data.host;
        data.generalemailaddress = data.generalemailaddress.toLowerCase();

        var params = [{
          name: "Name",
          value: data.firstname + " " + data.lastname
        }, {
          name: "Company",
          value: data.company
        }, {
          name: "E-Mail",
          value: data.generalemailaddress,
          href: "mailto:" + data.generalemailaddress + "?subject=re: " + data.title
        }, {
          name: "Sales Region",
          value: regionText
        }, {
          name: "Host",
          value: data.host,
          href: "https://" + data.host
        }];

        if (CommerceAPI.context.getFeature('SUBSIDIARIES')) {
          data.subsidiary = CommerceAPI.session.getShopperSubsidiary();
        }

        if (data.phone) {
          params.push({
            name: "Phone Number",
            value: data.phone,
            href: "tel:" + data.phone
          });
        }

        switch (data.host) {
          case "stonetools-fr.bluebridgeone.com":
          case "www.stonetools.fr":
          case "stonetools.fr":
            region = 2;
            regionText = "France"
          case "stonetools-ie.bluebridgeone.com":
          case "www.stonetools.ie":
          case "stonetools.ie":
            region = 3;
            regionText = "Ireland"
        }

        if (configuration.usecompanies && data.company && data.company.length > 0) {
     
          var leadID = this.createLead(data);


          var contactIDs = this.createContacts(data, leadID);










        } else {





          // nlapiLogExecution("DEBUG", "Deepak Testing - line 169", "ELSE INDIVIDUAL");

          // //Individual
          // var customerSearch = nlapiSearchRecord("entity", null, [
          //   ["email", "is", data.generalemailaddress]
          // ], [
          //   new nlobjSearchColumn("entityid", null, null),
          //   new nlobjSearchColumn("email", null, null)
          // ]);

          // for (var i = 0; customerSearch != null && i < customerSearch.length; i++) {
          //   var res = customerSearch[i];
          //   if (res.recordType != "contact") {
          //     leadID = res.getId();
          //     break;
          //   }
          // }




          // if (!leadID) { 


          //   //Create new lead
          //   //nlapiLogExecution('DEBUG', "Not found " + data.generalemailaddress);

          //   nlapiLogExecution("DEBUG", "Deepak Testing - line 190", "CREATE A NEW LEAD");

          //   var lead = nlapiCreateRecord('lead');
          //   lead.setFieldValue("email", data.generalemailaddress);
          //   lead.setFieldValue("firstname", data.firstname);
          //   lead.setFieldValue("lastname", data.lastname);
          //   lead.setFieldValue("comments", "Created by website " + currentDomain + ".");
          //   lead.setFieldValue("isperson", "T");
          //   if (data.phone) {
          //     lead.setFieldValue("phone", data.phone);
          //   }
          //   if (data.company) {
          //     lead.setFieldValue("companyname", data.company);
          //   } else {
          //     lead.setFieldValue("companyname", "unknown");
          //   }





          //   //CUSTOM
          //   lead.setFieldValue("custentity_bb1_gen_email_add", data.generalemailaddress);
          //   lead.setFieldValue("custentity_bb1_sales_region", region);


          //   var autonumbering = false; //Customer autonumbering is on in account.

          //   if (autonumbering) {
          //     leadID = nlapiSubmitRecord(lead, true);
          //   } else {
          //     lead.setFieldValue("entityid", data.firstname + " " + data.lastname);

          //     var number = 1;
          //     do { //Find a unique ID using trial and error
          //       try {
          //         leadID = nlapiSubmitRecord(lead, true);
          //       } catch (err2) {
          //         if (err2.code == "UNIQUE_CUST_ID_REQD") {
          //           number++;
          //           lead.setFieldValue("entityid", data.firstname + " " + data.lastname + " " + number);
          //         } else {
          //           throw (err2);
          //         }

          //       }

          //     } while (!leadID);
          //   }
          // }






        }










        

        // nlapiLogExecution("DEBUG", "Testing", "line 316");
        // //setup new case
        // newCaseRecord = nlapiCreateRecord('supportcase');
        // newCaseRecord.setFieldValue('title', "Credit Account Application | " + data.host);
        // newCaseRecord.setFieldValue('incomingmessage', data.firstname + " " + data.lastname + " from " + data.company + " would like to apply for a credit account.");
        // newCaseRecord.setFieldValue('generalemailaddress', data.generalemailaddress);
        // newCaseRecord.setFieldValue('company', leadID);

        // if (data.phone) {
        //   nlapiLogExecution("DEBUG", "Testing", "line 325");
        //   newCaseRecord.setFieldValue('phone', data.phone);
        // }

        // if (contactID) {
        //   nlapiLogExecution("DEBUG", "Testing", "line 330");
        //   newCaseRecord.setFieldValue('contact', contactID);
        // }

        // nlapiLogExecution("DEBUG", "caseconfiguration - line 334", JSON.stringify(caseconfiguration));
        // newCaseRecord.setFieldValue('status', caseconfiguration.defaultValues.statusStart.id); // Not Started
        // newCaseRecord.setFieldValue('origin', caseconfiguration.defaultValues.origin.id); // Web

        // //submit / create the case in NS...
        // nlapiLogExecution("DEBUG", "Testing", "line 339");
        // caseID = nlapiSubmitRecord(newCaseRecord);

        // nlapiLogExecution("DEBUG", "Testing", "line 341");





        // //Gather shizzle for email notification
        // if (leadID) {
        //   nlapiLogExecution("DEBUG", "Testing", "line 349");
        //   params.push({
        //     name: "Customer",
        //     value: "View in NetSuite",
        //     href: "https://system.eu2.netsuite.com" + nlapiResolveURL('RECORD', 'customer', leadID)
        //   });
        // }
        // if (contactID) {
        //   nlapiLogExecution("DEBUG", "Testing", "line 357");
        //   params.push({
        //     name: "Contact",
        //     value: "View in NetSuite",
        //     href: "https://system.eu2.netsuite.com" + nlapiResolveURL('RECORD', 'contact', contactID)
        //   });
        // }
        // if (caseID) {
        //   nlapiLogExecution("DEBUG", "Testing", "line 365");
        //   params.push({
        //     name: "Case",
        //     value: "View in NetSuite",
        //     href: "https://system.eu2.netsuite.com" + nlapiResolveURL('RECORD', 'supportcase', caseID)
        //   });

        //   reply = "https://system.eu2.netsuite.com" + nlapiResolveURL('RECORD', 'supportcase', caseID, "EDIT");
        // }

        // nlapiLogExecution("DEBUG", "Testing", "line 375");

        // //Send the email notification
        // Tools.emailAlert(69397, notify, "Trade Registration", "Please create a trade account for " + data.company + ".", "<p><span style=\"color:#888;\">Name:</span> " + data.firstname + " " + data.lastname + "</p><p><span style=\"color:#888;\">Company:</span> " + data.company + "</p>", params);

        // nlapiLogExecution("DEBUG", "Testing", "line 380");

        return {
          successMessage: 'Thanks for contacting us. Your request for a trade account has been received. We will review your details get back to you shorty.'
        };


      } catch (e) {

        nlapiLogExecution("ERROR", "Register CAA Error", JSON.stringify(e));

        return {
          status: 500,
          code: 'ERR_FORM',
          message: 'There was an error submitting the form, please try again later.',
          stack: e.details || e.message || e
        }
      }

    }
  });
});